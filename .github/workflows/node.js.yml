# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs
name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < .env.template > .env.local
          npm ci

      - name: Save node_modules as artifact
        uses: actions/upload-artifact@v3
        with:
          name: node-modules
          path: |
            node_modules
            .env.local

  test-unit:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download node_modules
        uses: actions/download-artifact@v3
        with:
          name: node-modules

      - name: Run Unit Tests
        run: npm run test:unit

  test-integration:
    runs-on: ubuntu-latest
    needs: install
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install Docker CLI
        run: sudo apt-get update && sudo apt-get install -y docker.io

      - name: Wait for DB and Push Schema
        run: |
          until pg_isready -h localhost -U ${{ secrets.POSTGRES_USER }}; do sleep 2; done
          npx drizzle-kit push

      - name: Run Integration Tests
        run: npm run test:integration

  build:
    runs-on: ubuntu-latest
    needs: [test-unit, test-integration]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build
