name: CI Pipeline

on:
  push:
    branches:
      - main
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < .env.template > .env.local
          npm ci

      - name: Build Project
        run: npm run build

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < .env.template > .env.local
          npm ci

      - name: Run Unit Tests
        run: npm run test:unit

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: self_service_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOSTNAME: localhost  
      DB_PORT: 5432
      DB_NAME: self_service_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/self_service_test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
          envsubst < .env.template > .env.local
          cat .env.local 
          npm ci

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -U postgres; do sleep 2; done

      - name: Push Drizzle Migrations
        run: npx drizzle-kit push

      - name: Run Integration Tests
        run: npm run test:integration
